name: test

on:
  workflow_call:
  workflow_dispatch:

env:
  CACHE_DIR: installs

jobs:
  test-e2e:
    name: E2E Test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: ['14.x', '16.x', '18.x']
        paneron_ref: ['1ab232b008ba9709c9a80512c0eceaeb525515bf']

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Node JS
        uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      # See: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/.npmrc', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore Paneron cache
        id: paneron_build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: build-${{ runner.os }}-${{ matrix.node }}-${{ matrix.paneron_ref }}-${{ hashFiles('.github/workflows/test-e2e.yml') }}

      - name: Check out Paneron repo
        uses: actions/checkout@v3
        if: steps.paneron_build_cache.outputs.cache-hit != 'true'
        with:
          repository: 'paneron/paneron'
          fetch-depth: 1
          path: ${{ env.CACHE_DIR }}/paneron
          ref: ${{ matrix.paneron_ref }}

      - name: Build Paneron cache
        if: steps.paneron_build_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          pushd ${{ env.CACHE_DIR }}/paneron
          # Work around node js 17+ OpenSSL
          if [[ ${{ matrix.node }} = 18* ]]; then \
            export NODE_OPTIONS=--openssl-legacy-provider; \
          fi
          # NOTE: Switch to pnpm when Paneron switches to pnpm.
          # pnpm install --frozen-lockfile --strict-peer-dependencies
          # pnpm run compile
          yarn install --frozen-lockfile
          yarn compile
          unset NODE_OPTIONS # Unset otherwise GitHub action for Restore Cache would complain about "--openssl-legacy-provider is not allowed in NODE_OPTIONS"
          popd

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      # For issue 'electron.launch: Process failed to launch'
      # @see https://github.com/microsoft/playwright/issues/11932
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y xvfb

      # For rsync support in Windows
      - uses: GuillaumeFalourd/setup-rsync@v1.1
        if: matrix.os == 'windows-latest'

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_DIR }}
          key: build-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('src/**', '**/.npmrc', 'tsconfig*.json', '**/pnpm-lock.yaml', '.github/workflows/build.yml') }}

      - name: Restore cache to working directory
        shell: bash
        run: |
          echo ls -la ${{ env.CACHE_DIR }}/
          ls -la ${{ env.CACHE_DIR }}/
          echo ls -la ${{ env.CACHE_DIR }}/*
          ls -la ${{ env.CACHE_DIR }}/*
          for i in dist; do \
            rsync -a ${{ env.CACHE_DIR }}/"$i" "$i"; \
          done
          echo ls -la .
          ls -la .
          echo ls -la dist
          ls -la dist

      - run: pnpm run test:e2e
        if: matrix.os != 'ubuntu-latest'

      - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm run test:e2e
        if: matrix.os == 'ubuntu-latest'
