name: build

on:
  workflow_call:
  workflow_dispatch:

env:
  CACHE_DIR: dist
  MAIN_PACKAGE_PATH: packages/legacy

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    concurrency:
      group: '${{ github.workflow }}-build-${{ matrix.node }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        node: [16, 18, 20]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Calculate build-cache key
        # Because the exact same hashFiles invocation produces different
        # results down the file
        id: build-cache-key
        run: |
          echo "key=build-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package.json', '**/src/**', '**/.swcrc', '**/.npmrc', '**/tsconfig*.json', '**/pnpm-lock.yaml', '.github/workflows/build.yml') }}" | tee -a $GITHUB_OUTPUT
        shell: bash

      - name: Restore build cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.build-cache-key.outputs.key }}

      - uses: actions/setup-node@v3
        if: steps.build_cache.outputs.cache-hit != 'true'
        id: setup-node
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        if: steps.build_cache.outputs.cache-hit != 'true'
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

        # See: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        if: steps.build_cache.outputs.cache-hit != 'true'
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        if: steps.build_cache.outputs.cache-hit != 'true'
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/.npmrc', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Build cache on ${{ runner.os }}
        if: steps.build_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          pnpm run dist
