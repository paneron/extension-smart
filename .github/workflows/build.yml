name: build

on:
  workflow_call:
  workflow_dispatch:

env:
  CACHE_DIR: installs

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: ['14.x', '16.x', '18.x']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Restore cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: build-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('src/**', 'tsconfig*.json', 'yarn.lock', '.github/workflows/build.yml') }}

      - uses: actions/setup-node@v3
        if: steps.build_cache.outputs.cache-hit != 'true'
        id: setup-node
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
          cache-dependency-path: yarn.lock

      - run: yarn install --frozen-lockfile
        if: steps.build_cache.outputs.cache-hit != 'true'

      - name: Build cache on ${{ matrix.os }}
        if: steps.build_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == windows* ]]; then \
            yarn buildwin; \
          else \
            yarn build; \
          fi

      # For rsync support in Windows
      - uses: GuillaumeFalourd/setup-rsync@v1
        if: startsWith(matrix.os, 'windows') && steps.build_cache.outputs.cache-hit != 'true'

      - name: Save built artefacts to cache
        if: steps.build_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          # Due to GitHub's stupid cp, need to use rsync instead.
          for i in dist; do \
            rsync -a "$i" ${{ env.CACHE_DIR }}; \
          done
          echo ls -la ${{ env.CACHE_DIR }}
          ls -la ${{ env.CACHE_DIR }}
          echo ls -la ${{ env.CACHE_DIR }}/*
          ls -la ${{ env.CACHE_DIR }}/*
