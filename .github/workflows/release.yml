name: release

on:
  workflow_call:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      next_version:
        description: |
          Next release version. Possible values: x.y.z, major, minor, patch
        required: true
        default: 'skip'

env:
  CACHE_DIR: installs

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['16.x']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - run: yarn install --frozen-lockfile

      # For rsync support in Windows
      - uses: GuillaumeFalourd/setup-rsync@v1
        if: matrix.os == 'windows-latest'

      - name: Restore cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: build-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('src/**', 'tsconfig*.json', 'yarn.lock', '.github/workflows/build.yml') }}

      - name: Restore cache to working directory
        shell: bash
        run: |
          for i in dist; do \
            rsync -a ${{ env.CACHE_DIR }}/"$i" "$i"; \
          done

      - name: Create a new version
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.next_version != 'skip'
        shell: bash
        run: |
          yarn version --new-version ${{ github.event.inputs.next_version }}
          git push

      - name: Publish to npm
        run: |
          yarn publish dist --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PANERON_CI_NPM_TOKEN }}
