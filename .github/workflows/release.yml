name: release

on:
  workflow_call:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      next_version:
        description: |
          Next release version. Possible values: x.y.z, major, minor, patch
        required: true
        default: 'skip'
      # XXX: does not skip for some reason
      # skip_tests:
      #   description: |
      #     Skip tests iff === 'true'
      #   required: true
      #   default: 'false'

env:
  CACHE_DIR: dist

jobs:
  tests:
    # XXX: does not skip for some reason
    # if: github.events.inputs.skip_tests != 'true'
    uses: ./.github/workflows/build-and-test.yml

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Calculate build-cache key
        # Because the exact same hashFiles invocation produces different
        # results down the file
        id: build-cache-key
        run: |
          echo "key=build-${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('package.json', '**/src/**', '**/.swcrc', '**/.npmrc', '**/tsconfig*.json', '**/pnpm-lock.yaml', '.github/workflows/build.yml') }}" | tee -a $GITHUB_OUTPUT
        shell: bash

      - uses: actions/setup-node@v3
        id: setup-node
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      # See: https:
        # //github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/.npmrc', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Restore cache
        id: build_cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.build-cache-key.outputs.key }}

      - name: Create a new version
        if: ${{ github.event_name == 'workflow_call' || github.event_name == 'workflow_dispatch' && github.event.inputs.next_version != 'skip' }}
        shell: bash
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # cd to where project package.json is
          # pnpm version \
          #   --new-version ${{ github.event.inputs.next_version }} \
          #   --message "chore: Release ${{ github.event.inputs.next_version }}"
          pnpm bump-version ${{ github.event.inputs.next_version }}

          # Push commit along with tag
          git push origin --tags :

      - name: Publish to npm
        run: |
          diff -u {,dist/}package.json || \
            cp {,dist/}package.json
          pnpm publish dist --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PANERON_CI_NPM_TOKEN }}

  update-website:
    needs: [publish]
    uses: ./.github/workflows/update-website.yml
